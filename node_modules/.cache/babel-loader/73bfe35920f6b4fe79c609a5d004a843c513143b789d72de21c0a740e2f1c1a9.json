{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AsusVivoBooK\\\\Desktop\\\\ravenous\\\\src\\\\components\\\\SearchBar\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport SearchBarContainer from '../../containers/SearchBar/SearchBarContainer';\nimport { search } from '../../utils/yelp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sortByOptions = {\n  \"Best Match\": \"best_match\",\n  \"Highest Rated\": \"rating\",\n  \"Most Reviewed\": \"review_count\",\n  \"Nearest\": \"nearest\"\n};\nconst SearchBar = ({\n  searchYelp\n}) => {\n  _s();\n  const [term, setTerm] = useState(\"restaurants\");\n  const [location, setLocation] = useState(\"New york\");\n  const [sort, setSort] = useState(\"best_match\");\n  const [activeOption, setActiveOption] = useState(null);\n  const [businesses, setBusinesses] = useState([]);\n  const handleTermChange = ({\n    target\n  }) => {\n    setTerm(target.value);\n  };\n  const handleLocationChange = ({\n    target\n  }) => {\n    setLocation(target.value);\n  };\n\n  // Function to sort businesses by distance from nearest to farthest\n  function sortByDistance(businesses) {\n    const sortedBusinesses = [...businesses]; // Create a copy of the original array\n    sortedBusinesses.sort((a, b) => {\n      return a.distance - b.distance; // Sort by ascending distance\n    });\n    return sortedBusinesses;\n  }\n\n  // Function to sort businesses by distance from farthest to nearest\n  function sortByDistanceDescending(businesses) {\n    const sortedBusinesses = [...businesses]; // Create a copy of the original array\n    sortedBusinesses.sort((a, b) => {\n      return b.distance - a.distance; // Sort by descending distance\n    });\n    return sortedBusinesses;\n  }\n  const handleSortClick = option => {\n    setSort(option);\n    setActiveOption(option); // Update the active option state when an option is clicked\n    // Check if the selected option is \"Nearest\"\n    if (option === \"Nearest\") {\n      // Sort businesses by distance from nearest to farthest\n      const sortedBusinesses = sortByDistance(businesses);\n      setBusinesses(sortedBusinesses);\n    } else {\n      // Handle other sorting options here\n      // For example, if you have other sorting options implemented\n      // Trigger Yelp API request with updated sorting option\n      searchYelp(term, location, option);\n    }\n    // // Trigger Yelp API request with updated sorting option\n    // searchYelp(term, location, option);\n  };\n  const handleSearchSubmit = event => {\n    event.preventDefault();\n    searchYelp(term, location, sort);\n  };\n\n  //Statefull component olduguna gore JSX render etmirik. JSX ucun stateless componente gonderirik.\n  return /*#__PURE__*/_jsxDEV(SearchBarContainer, {\n    sortByOptions: sortByOptions,\n    handleSortClick: handleSortClick,\n    activeOption: activeOption,\n    handleTermChange: handleTermChange,\n    handleLocationChange: handleLocationChange,\n    handleSearchSubmit: handleSearchSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchBar, \"Nzx6UbhnZ/z2NNELXGYPKZxCiS0=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","SearchBarContainer","search","jsxDEV","_jsxDEV","sortByOptions","SearchBar","searchYelp","_s","term","setTerm","location","setLocation","sort","setSort","activeOption","setActiveOption","businesses","setBusinesses","handleTermChange","target","value","handleLocationChange","sortByDistance","sortedBusinesses","a","b","distance","sortByDistanceDescending","handleSortClick","option","handleSearchSubmit","event","preventDefault","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AsusVivoBooK/Desktop/ravenous/src/components/SearchBar/SearchBar.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport SearchBarContainer from '../../containers/SearchBar/SearchBarContainer';\r\nimport {search} from '../../utils/yelp';\r\n\r\nconst sortByOptions = {\r\n    \"Best Match\": \"best_match\",\r\n    \"Highest Rated\": \"rating\",\r\n    \"Most Reviewed\": \"review_count\",\r\n    \"Nearest\": \"nearest\",\r\n};\r\n\r\nconst SearchBar = ({searchYelp}) => {\r\n    const [term, setTerm] = useState(\"restaurants\");\r\n    const [location, setLocation] = useState(\"New york\");\r\n    const [sort, setSort] = useState(\"best_match\");\r\n    const [activeOption, setActiveOption] = useState(null);\r\n    const [businesses, setBusinesses] = useState([]);\r\n\r\n    const handleTermChange = ({target}) => {\r\n        setTerm(target.value);\r\n    }\r\n\r\n    const handleLocationChange = ({target}) => {\r\n        setLocation(target.value);\r\n    }\r\n\r\n    // Function to sort businesses by distance from nearest to farthest\r\n    function sortByDistance(businesses) {\r\n        const sortedBusinesses = [...businesses]; // Create a copy of the original array\r\n        sortedBusinesses.sort((a, b) => {\r\n            return a.distance - b.distance; // Sort by ascending distance\r\n        });\r\n        return sortedBusinesses;\r\n    }\r\n\r\n    // Function to sort businesses by distance from farthest to nearest\r\n    function sortByDistanceDescending(businesses) {\r\n        const sortedBusinesses = [...businesses]; // Create a copy of the original array\r\n        sortedBusinesses.sort((a, b) => {\r\n            return b.distance - a.distance; // Sort by descending distance\r\n        });\r\n        return sortedBusinesses;\r\n    }\r\n\r\n\r\n    const handleSortClick = (option) => {\r\n        setSort(option);\r\n        setActiveOption(option); // Update the active option state when an option is clicked\r\n        // Check if the selected option is \"Nearest\"\r\n        if (option === \"Nearest\") {\r\n            // Sort businesses by distance from nearest to farthest\r\n            const sortedBusinesses = sortByDistance(businesses);\r\n            setBusinesses(sortedBusinesses);\r\n        } else {\r\n            // Handle other sorting options here\r\n            // For example, if you have other sorting options implemented\r\n            // Trigger Yelp API request with updated sorting option\r\n            searchYelp(term, location, option);\r\n        }\r\n        // // Trigger Yelp API request with updated sorting option\r\n        // searchYelp(term, location, option);\r\n    }\r\n\r\n    const handleSearchSubmit = (event) => {\r\n        event.preventDefault();\r\n        searchYelp(term, location, sort);\r\n    }\r\n\r\n    //Statefull component olduguna gore JSX render etmirik. JSX ucun stateless componente gonderirik.\r\n    return (\r\n        <SearchBarContainer\r\n            sortByOptions={sortByOptions}\r\n            handleSortClick={handleSortClick}\r\n            activeOption={activeOption}\r\n            handleTermChange={handleTermChange}\r\n            handleLocationChange={handleLocationChange}\r\n            handleSearchSubmit={handleSearchSubmit}\r\n        />\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}