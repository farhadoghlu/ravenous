{"ast":null,"code":"const apiKey = 'L3O2ub-Zux4WD-0cd7n4w-4oXkKKrJEXVr23CcVbBIQg3e5Y-4JdWmk9ZECxF3jGfN0GpiHDFvNPOI8yM3WvYvsDNSSc5LXJBiVeH97jZT6WgkHUWpswpExPL0QEZnYx'; // replace your api key here\nconst corsAnywhereUrl = 'https://cors-anywhere.herokuapp.com/';\n\n// function search(term, location, sortBy) {\n//     return fetch(`https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\n//         headers: {\n//             Authorization: `Bearer ${apiKey}`\n//         }\n//     }).then(response => {\n//         return response.json();\n//     }).then(jsonResponse => {\n//         if (jsonResponse.businesses) {\n//             return jsonResponse.businesses.map(business => ({\n//                 id: business.id,\n//                 imageSrc: business.image_url,\n//                 name: business.name,\n//                 address: business.location.address1,\n//                 city: business.location.city,\n//                 state: business.location.state,\n//                 zipCode: business.location.zip_code,\n//                 category: business.categories[0].title,\n//                 rating: business.rating,\n//                 reviewCount: business.review_count\n//             }));\n//         }\n//     });\n// }\n//\n// module.exports = {search};\n\nasync function search(term, location, sortBy) {\n  try {\n    const response = await fetch(`https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\n      headers: {\n        Authorization: `Bearer ${apiKey}`\n      }\n    });\n    const jsonResponse = await response.json();\n    if (jsonResponse.businesses) {\n      return jsonResponse.businesses.map(business => ({\n        id: business.id,\n        imageSrc: business.image_url,\n        name: business.name,\n        address: business.location.address1,\n        city: business.location.city,\n        state: business.location.state,\n        zipCode: business.location.zip_code,\n        category: business.categories[0].title,\n        rating: business.rating,\n        reviewCount: business.review_count\n      }));\n    }\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    return []; // Return an empty array in case of an error\n  }\n}\nmodule.exports = {\n  search\n};","map":{"version":3,"names":["apiKey","corsAnywhereUrl","search","term","location","sortBy","response","fetch","headers","Authorization","jsonResponse","json","businesses","map","business","id","imageSrc","image_url","name","address","address1","city","state","zipCode","zip_code","category","categories","title","rating","reviewCount","review_count","error","console","module","exports"],"sources":["C:/Users/AsusVivoBooK/Desktop/ravenous/src/utils/yelp.js"],"sourcesContent":["const apiKey = 'L3O2ub-Zux4WD-0cd7n4w-4oXkKKrJEXVr23CcVbBIQg3e5Y-4JdWmk9ZECxF3jGfN0GpiHDFvNPOI8yM3WvYvsDNSSc5LXJBiVeH97jZT6WgkHUWpswpExPL0QEZnYx'; // replace your api key here\r\nconst corsAnywhereUrl = 'https://cors-anywhere.herokuapp.com/';\r\n\r\n\r\n// function search(term, location, sortBy) {\r\n//     return fetch(`https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\r\n//         headers: {\r\n//             Authorization: `Bearer ${apiKey}`\r\n//         }\r\n//     }).then(response => {\r\n//         return response.json();\r\n//     }).then(jsonResponse => {\r\n//         if (jsonResponse.businesses) {\r\n//             return jsonResponse.businesses.map(business => ({\r\n//                 id: business.id,\r\n//                 imageSrc: business.image_url,\r\n//                 name: business.name,\r\n//                 address: business.location.address1,\r\n//                 city: business.location.city,\r\n//                 state: business.location.state,\r\n//                 zipCode: business.location.zip_code,\r\n//                 category: business.categories[0].title,\r\n//                 rating: business.rating,\r\n//                 reviewCount: business.review_count\r\n//             }));\r\n//         }\r\n//     });\r\n// }\r\n//\r\n// module.exports = {search};\r\n\r\n\r\nasync function search(term, location, sortBy) {\r\n    try {\r\n        const response = await fetch(`https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${apiKey}`\r\n            }\r\n        });\r\n        const jsonResponse = await response.json();\r\n        if (jsonResponse.businesses) {\r\n            return jsonResponse.businesses.map(business => ({\r\n                id: business.id,\r\n                imageSrc: business.image_url,\r\n                name: business.name,\r\n                address: business.location.address1,\r\n                city: business.location.city,\r\n                state: business.location.state,\r\n                zipCode: business.location.zip_code,\r\n                category: business.categories[0].title,\r\n                rating: business.rating,\r\n                reviewCount: business.review_count\r\n            }));\r\n        }\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        return []; // Return an empty array in case of an error\r\n    }\r\n}\r\n\r\nmodule.exports = { search };"],"mappings":"AAAA,MAAMA,MAAM,GAAG,kIAAkI,CAAC,CAAC;AACnJ,MAAMC,eAAe,GAAG,sCAAsC;;AAG9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,eAAeC,MAAMA,CAACC,IAAI,EAAEC,QAAQ,EAAEC,MAAM,EAAE;EAC1C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kDAAiDJ,IAAK,aAAYC,QAAS,YAAWC,MAAO,EAAC,EAAE;MAC1HG,OAAO,EAAE;QACLC,aAAa,EAAG,UAAST,MAAO;MACpC;IACJ,CAAC,CAAC;IACF,MAAMU,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC1C,IAAID,YAAY,CAACE,UAAU,EAAE;MACzB,OAAOF,YAAY,CAACE,UAAU,CAACC,GAAG,CAACC,QAAQ,KAAK;QAC5CC,EAAE,EAAED,QAAQ,CAACC,EAAE;QACfC,QAAQ,EAAEF,QAAQ,CAACG,SAAS;QAC5BC,IAAI,EAAEJ,QAAQ,CAACI,IAAI;QACnBC,OAAO,EAAEL,QAAQ,CAACV,QAAQ,CAACgB,QAAQ;QACnCC,IAAI,EAAEP,QAAQ,CAACV,QAAQ,CAACiB,IAAI;QAC5BC,KAAK,EAAER,QAAQ,CAACV,QAAQ,CAACkB,KAAK;QAC9BC,OAAO,EAAET,QAAQ,CAACV,QAAQ,CAACoB,QAAQ;QACnCC,QAAQ,EAAEX,QAAQ,CAACY,UAAU,CAAC,CAAC,CAAC,CAACC,KAAK;QACtCC,MAAM,EAAEd,QAAQ,CAACc,MAAM;QACvBC,WAAW,EAAEf,QAAQ,CAACgB;MAC1B,CAAC,CAAC,CAAC;IACP;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,OAAO,EAAE,CAAC,CAAC;EACf;AACJ;AAEAE,MAAM,CAACC,OAAO,GAAG;EAAEhC;AAAO,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}